<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  position: relative;
}

.bar {
  fill: steelblue;
}

.bar:hover {
  fill: brown;
}

.axis--x path {
  display: none;
}

label {
  position: absolute;
  top: 10px;
  right: 10px;
}

</style>
Data source: <a href="https://data.ny.gov/resource/h6w8-42p9.json">https://data.ny.gov/resource/h6w8-42p9.json</a><br>
Since October 19, 2013, the Mega Millions have had 75 numbers to pick from.<br>
Some numbers have been picked more frequenly than others.

<svg width="1260" height="500"></svg>
<label><input type="checkbox"> Sort values</label>
<script src="//d3js.org/d3.v4.min.js"></script>
<script>
var svg = d3.select("svg"),
    margin = {top: 20, right: 20, bottom: 30, left: 20},
    width = +svg.attr("width") - margin.left - margin.right,
    height = +svg.attr("height") - margin.top - margin.bottom;

var g = svg.append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var x = d3.scaleBand().rangeRound([0, width], .1, 1);

var y = d3.scaleLinear()
    .range([height, 0]);

var xAxis = d3.axisBottom()
    .scale(x);

var yAxis = d3.axisLeft()
    .scale(y);

var data = JSON.parse('<%= raw(@data_json) %>');

data.forEach(function(d) {
  d.count = +d.count;
});

x.domain(data.map(function(d) { return d.number; }));
y.domain([0, d3.max(data, function(d) { return d.count; })]);

g.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis);

g.append("g")
    .attr("class", "y axis")
    .call(yAxis)
  .append("text")
    .attr("transform", "rotate(-90)")
    .attr("y", 6)
    .attr("dy", ".71em")
    .style("text-anchor", "end")
    .text("Count");

g.selectAll(".bar")
    .data(data)
  .enter().append("rect")
    .attr("class", "bar")
    .attr("x", function(d) { return x(d.number); })
    .attr("width", x.bandwidth()-2)
    .attr("y", function(d) { return y(d.count); })
    .attr("height", function(d) { return height - y(d.count); });

d3.select("input").on("change", change);

function change() {
  // Copy-on-write since tweens are evaluated after a delay.
  var x0 = x.domain(data.sort(this.checked
      ? function(a, b) { return b.count - a.count; }
      : function(a, b) { return d3.ascending(a.number, b.number); })
      .map(function(d) { return d.number; }))
      .copy();

  svg.selectAll(".bar")
      .sort(function(a, b) { return x0(a.number) - x0(b.number); });

  var transition = svg.transition().duration(750),
      delay = function(d, i) { return i * 50; };

  transition.selectAll(".bar")
      .delay(delay)
      .attr("x", function(d) { return x0(d.number); });

  transition.select(".x.axis")
      .call(xAxis)
    .selectAll("g")
      .delay(delay);
}

</script>
